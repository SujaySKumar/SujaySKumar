/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package texteditor;

import java.awt.Color;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.Random;
import java.util.Scanner;
import java.util.Stack;
import java.util.StringTokenizer;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTree;
import static javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.text.AttributeSet;
import javax.swing.text.DefaultEditorKit;
import javax.swing.text.Element;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyleContext;
import javax.swing.text.StyledDocument;

/**
 *
 * @author Kumar BN
 */
public class TextEditorFrame extends javax.swing.JFrame {

    /**
     * Creates new form TextEditorFrame
     */
    public TextEditorFrame() {
                super("IlluminaText");
                 
                initComponents();
                jScrollPane2.setVerticalScrollBarPolicy(VERTICAL_SCROLLBAR_NEVER);
        jScrollPane1.getVerticalScrollBar().setModel(jScrollPane2.getVerticalScrollBar().getModel());
        textArea.getDocument().addDocumentListener(new DocumentListener(){
			public String getText(){
				int caretPosition = textArea.getDocument().getLength();
				Element root = textArea.getDocument().getDefaultRootElement();
				String text = "1" + System.getProperty("line.separator");
				for(int i = 2; i < root.getElementIndex( caretPosition ) + 2; i++){
					text += i + System.getProperty("line.separator");
				}
				return text;
			}
                        
			@Override
                        
			public void changedUpdate(DocumentEvent de) {
				lines.setText(getText());
                                
			}
 
			@Override
			public void insertUpdate(DocumentEvent de) {
                              
				lines.setText(getText());
                                
			}
 
			@Override
			public void removeUpdate(DocumentEvent de) {
				lines.setText(getText());
			}
 
		});
		StringBuilder buff = new StringBuilder("");
		buff.append("(");
		for (String keyword : JAVA_KEYWORDS) {
			buff.append("\\b").append(keyword).append("\\b").append("|");
		}
		buff.deleteCharAt(buff.length() - 1);
		buff.append(")");
		JAVA_KEYWORDS_REGEX = buff.toString();
                textEditorDoc = textArea.getStyledDocument();
                textArea.getDocument().putProperty(DefaultEditorKit.EndOfLineStringProperty,"\n");
                FileTreeDemo2 demo=new FileTreeDemo2();
                FileTreeDemo abc=new FileTreeDemo();
                abc.main1();
                 String[] ioName=demo.getIOArray();
                 String[] utilName=demo.getUtilArray();
                 String[] langName=demo.getLangArray();
                 String[] mathName=demo.getMathArray();
            //int[] r={100,125,150};
           // int[] b={100,125,150};
            //int[] g={100,125,150};
            bstIO=new BST();
          /*  
            for(int i=0;i<ioName.length;i++)
            {   
                if(ioName[i]!=null)
                bstIO.insert(ioName[i],255,0,0);
                            }
            bstIO.inorder();
            /*
            
            for(int i=0;i<utilName.length;i++)
            {
                 if(utilName[i]!=null)
                bstIO.insert(utilName[i],0,255,0);
                            }
            //bstUtil.inorder();*/
            bstLang=new BST();
            /*for(int i=0;i<langName.length;i++)
            {
                 if(langName[i]!=null)
                bstIO.insert(langName[i],0,0,255);
                            }*/
            bstMath=new BST(); bstUtil=new BST();
            for(int i=0;i<20;i++)
            {
                 if(mathName[i]!=null)
                bstMath.insert(mathName[i],125,125,125);
                 if(langName[i]!=null)
                bstLang.insert(langName[i],0,0,255);
                 if(ioName[i]!=null)
                bstIO.insert(ioName[i],255,0,0);
                 if(utilName[i]!=null)
                bstUtil.insert(utilName[i],0,255,0);
                            }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        newButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        openButton = new javax.swing.JButton();
        exitButton = new javax.swing.JButton();
        status = new javax.swing.JTextField();
        indentButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        lines = new javax.swing.JTextArea();
        findButton = new javax.swing.JButton();
        complieButton = new javax.swing.JButton();
        runButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        textArea = new javax.swing.JTextPane();
        highButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 0, 0));
        setFocusCycleRoot(false);

        newButton.setBackground(new java.awt.Color(19, 220, 194));
        newButton.setText("New");
        newButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newButtonActionPerformed(evt);
            }
        });

        saveButton.setBackground(new java.awt.Color(19, 220, 194));
        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        openButton.setBackground(new java.awt.Color(19, 220, 194));
        openButton.setText("Open");
        openButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openButtonActionPerformed(evt);
            }
        });

        exitButton.setBackground(new java.awt.Color(19, 220, 194));
        exitButton.setText("Exit");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });

        status.setEditable(false);

        indentButton.setBackground(new java.awt.Color(19, 220, 194));
        indentButton.setText("Indent");
        indentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                indentButtonActionPerformed(evt);
            }
        });

        lines.setEditable(false);
        lines.setBackground(new java.awt.Color(0, 0, 0));
        lines.setColumns(20);
        lines.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        lines.setForeground(new java.awt.Color(230, 32, 130));
        lines.setLineWrap(true);
        lines.setRows(5);
        jScrollPane2.setViewportView(lines);

        findButton.setBackground(new java.awt.Color(19, 220, 194));
        findButton.setText("Find & Replace");
        findButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findButtonActionPerformed(evt);
            }
        });

        complieButton.setBackground(new java.awt.Color(19, 220, 194));
        complieButton.setText("Compile");
        complieButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                complieButtonActionPerformed(evt);
            }
        });

        runButton.setBackground(new java.awt.Color(19, 220, 194));
        runButton.setText("Run");
        runButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runButtonActionPerformed(evt);
            }
        });

        textArea.setBackground(new java.awt.Color(0, 0, 0));
        textArea.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        textArea.setForeground(new java.awt.Color(255, 255, 255));
        textArea.setCaretColor(new java.awt.Color(255, 255, 255));
        textArea.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jScrollPane1.setViewportView(textArea);

        highButton.setBackground(new java.awt.Color(19, 220, 194));
        highButton.setText("Highlight");
        highButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                highButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(newButton)
                        .addGap(18, 18, 18)
                        .addComponent(saveButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(openButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(exitButton)
                        .addGap(10, 10, 10)
                        .addComponent(indentButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(findButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(complieButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(runButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(highButton)
                        .addGap(113, 113, 113)
                        .addComponent(status, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newButton)
                    .addComponent(saveButton)
                    .addComponent(openButton)
                    .addComponent(exitButton)
                    .addComponent(status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(indentButton)
                    .addComponent(findButton)
                    .addComponent(complieButton)
                    .addComponent(runButton)
                    .addComponent(highButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 502, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public static final Color DEFAULT_KEYWORD_COLOR = Color.blue;

	public static final String[] JAVA_KEYWORDS = new String[] { "abstract",
			"assert", "boolean", "break", "byte", "case", "catch", "char",
			"class", "const", "continue", "default", "do", "double", "else",
			"enum", "extends", "final", "finally", "float", "for", "goto",
			"if", "implements", "import", "instanceof", "int", "long",
			"native", "new", "package", "private", "protected", "public",
			"return", "short", "static", "strictfp", "super", "switch",
			"synchronized", "this", "throw", "throws", "transient", "try",
			"void", "volatile", "while", "false", "null", "true" };
	public static String JAVA_KEYWORDS_REGEX;
        			private StyledDocument textEditorDoc;


    private void newButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newButtonActionPerformed
        textArea.setText("");
        status.setText("new file");
        clearTextColors();
        
    }//GEN-LAST:event_newButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
            JFileChooser chooser=new JFileChooser();
            int chooservalue = chooser.showSaveDialog(this);
            if(chooservalue==JFileChooser.APPROVE_OPTION){
                try {
                    nameSave=chooser.getSelectedFile().getName();
                    PrintWriter fout=new PrintWriter(chooser.getSelectedFile());
                    fout.print(textArea.getText());
                    fout.close();
                    PrintWriter f=new PrintWriter("C:\\Vinay\\Indented.txt");
                    f.print(textArea.getText());
                    f.close();
                    status.setText("file saved"+chooser.getSelectedFile().getAbsolutePath());
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(TextEditorFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
                
            }
    }//GEN-LAST:event_saveButtonActionPerformed

    private void openButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openButtonActionPerformed
        JFileChooser chooser=new JFileChooser();
        int chooservalue = chooser.showOpenDialog(this);
        if(chooservalue==JFileChooser.APPROVE_OPTION){
            try{
            Scanner fin=new Scanner(chooser.getSelectedFile());
            String buffer="";
            while(fin.hasNext())
                buffer+=fin.nextLine()+"\n";
            textArea.setText(buffer);
            fin.close();
            status.setText("loaded"+chooser.getSelectedFile().getAbsolutePath());
        }
            catch(FileNotFoundException ex){
                JOptionPane.showMessageDialog(this,"file not found");
            }
        }
    }//GEN-LAST:event_openButtonActionPerformed

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitButtonActionPerformed
    public void save(){
        try {
                    PrintWriter fout=new PrintWriter("C:\\Vinay\\Texteditor\\texteditor\\"+nameSave);
                    System.out.println("C:\\Vinay\\Texteditor\\texteditor\\"+nameSave);
                    fout.print(textArea.getText());
                    fout.close();
        }
        catch (Exception e){}
    }
    public void indent(){
     try {
                    PrintWriter fout=new PrintWriter("C:\\Vinay\\Indent.txt");
                    fout.print(textArea.getText());
                    fout.close();
                    status.setText("file saved"+"C:\\Vinay\\Indent.txt");
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(TextEditorFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
     try{ 
                Scanner in=new Scanner(new File("C:\\Vinay\\Indent.txt"));
            //FileWriter fwriter=new FileWriter("C:\\Vinay\\Indented.txt",true);
            PrintWriter outputfile=new PrintWriter("C:\\Vinay\\Indented.txt");
            Stack stack=new Stack();
            int i,j,flag=0;
            while(in.hasNext()){
                String s=in.nextLine();
                if(s.indexOf('=')!=(-1) ){
                    flag=1;
                }
                for(j=0;j<s.length();j++){
                    if(flag==1){
                        for(i=0;i<stack.size()&&j==0;i++){
                        outputfile.print("\t");
                     }
                    outputfile.print(s);
                    outputfile.println();
                    flag=0;
                    break;
                    }
                    else{
                    char c=s.charAt(j);
                    if(c=='{'){
                        stack.push('{');
                        for(i=0;(i<stack.size()-1)&&j==0;i++){
                        outputfile.print("\t");
                        }
                        outputfile.print(c);
                        outputfile.println();
                        continue;
                    }
                    else if(c=='}'){
                        stack.pop();
                        for(i=0;(i<stack.size())&&j==0;i++){
                        outputfile.print("\t");
                        
                        }
                        outputfile.print(c);
                        outputfile.println();
                        continue;
                    }
                    if(stack.empty()){
                    outputfile.print(c);
                    }
                    else{
                     for(i=0;i<stack.size()&&j==0;i++){
                        outputfile.print("\t");
                        System.out.print("\t");
                     }
                      outputfile.print(c);
                    System.out.print(c);
                   }
                   if(j==(s.length()-1)){
                       outputfile.println();
                   }
                    
                }
            }
        }
            outputfile.close();
     }catch(Exception e){}
     try{
                Scanner fin=new Scanner(new File("C:\\Vinay\\Indented.txt"));
                String buffer="";
                while(fin.hasNext())
                    buffer+=fin.nextLine()+"\n";
                textArea.setText(buffer);
                System.out.println(buffer);
                fin.close();
                status.setText("loaded"+"C:\\Vinay\\Indented.txt");
                }
                catch(Exception e){}
     highlight();
     
    }
    private void indentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_indentButtonActionPerformed
        status.setText("Indenting file");
        //JFileChooser chooser=new JFileChooser();
            //int chooservalue = chooser.showSaveDialog(this);
            //if(chooservalue==JFileChooser.APPROVE_OPTION){
               //++indentNumber;
               //if(indentNumber==1){
               indent();
               
                /*outputfile.close();       
    }//GEN-LAST:event_indentButtonActionPerformed
     catch(Exception e){}*/
                
    }
                
    private void complieButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_complieButtonActionPerformed
        System.out.println("In COmplie Button");
        if(nameSave.equals("")){
            System.out.println("TRue");
            JOptionPane.showMessageDialog(null,"Save file first");
        }
        else
        {
            save();
            try{
            final File file = new File("C:\\Vinay\\Texteditor\\texteditor\\Complier.bat");
            file.createNewFile();
            PrintWriter writer = new PrintWriter(file, "UTF-8");
            writer.println("@echo off");
            writer.println("echo Please Wait Compiling...");
            writer.println("javac "+nameSave);
            writer.println("pause");
            writer.println("exit");
            writer.close();
            }catch(IOException ex){}
        try {
            String[] command = {"cmd.exe", "/C", "Start", "C:\\Vinay\\TextEditor\\texteditor\\Complier.bat"};
            Process p =  Runtime.getRuntime().exec(command);
        } catch (IOException ex) {}
        }
    }//GEN-LAST:event_complieButtonActionPerformed

    private void runButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runButtonActionPerformed
        String s=textArea.getText();
        if(s.contains("public static void main(")){
        try{
            final File file = new File("C:\\Vinay\\Texteditor\\texteditor\\Run.bat");
            file.createNewFile();
            PrintWriter writer = new PrintWriter(file, "UTF-8");
            writer.println("@echo off");
            writer.println("echo Running...");
            writer.println("java "+(nameSave.replace(".java","")));
            writer.println("pause");
            writer.println("exit");
            writer.close();
            }catch(IOException ex){} 
        try {
            String[] command = {"cmd.exe", "/C", "Start", "C:\\Vinay\\TextEditor\\texteditor\\Run.bat"};
            Process p =  Runtime.getRuntime().exec(command);           
        } catch (IOException ex) {
        }
        }
        else {
            JOptionPane.showMessageDialog(null,"No main method found");
        }
    }//GEN-LAST:event_runButtonActionPerformed

    private void highButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_highButtonActionPerformed
        // TODO add your handling code here:
       //System.out.println("\n It is here 1");
        
                              highlight();
                                
    }//GEN-LAST:event_highButtonActionPerformed
    public void highlight(){
        clearTextColors(); 
				Pattern pattern = Pattern.compile(JAVA_KEYWORDS_REGEX);
				System.out.println(pattern.pattern());
                                //System.out.println("\n It is here 2");
				Matcher match = pattern.matcher(textArea.getText());
				while (match.find()) {
                                    //System.out.println("\n It is here 3");
					updateTextColor(match.start(), match.end() - match.start());
				}
        s=textArea.getText();
       // System.out.print(s);
        char c;String s1="";
        int startindex=0;
        int endindex=0;int i;
        for(i=0;i<s.length();i++){
            
            c=s.charAt(i);
            if(c!=' ' && c!='=' && c!='.' && c!=',' && c!='\n' && c!='\t' && c!=';' && c!='(' && c!=')' && c!='{' && c!='}' && c!='[' && c!=']'){
                System.out.println("stuck here");
                s1=s1+c+"";
                endindex++;
            }
            else if(s1.length()>1)
            {
                char c1=s1.charAt(0);
                if((c1>=65)&&(c1<=90) && c1!=' ' && c1!='=' && c1!='.' && c1!=',' && c1!='\n' && c1!='\t' && c1!=';' && c1!='(' && c1!=')' && c1!='{' && c1!='}' && c1!='[' && c1!=']'){
            if(bstIO.search(s1)){
                //System.out.println("It's here");
                updateTextColor(startindex, s1.length(),Color.BLUE);
                           }
            else if(bstMath.search(s1)){
                //System.out.println("It's here");
                updateTextColor(startindex, s1.length(),Color.RED);
            }
            else if(bstLang.search(s1)){
                //System.out.println("It's here");
                updateTextColor(startindex, s1.length(),Color.GREEN);
            }
            else if(bstUtil.search(s1)){
                //System.out.println("It's here");
                updateTextColor(startindex, s1.length(),Color.YELLOW);
            }
                }
            startindex=endindex+1;
             endindex=endindex+1;
             s1="";
                }
            else {
             System.out.println("Word is = " +s1 +" Start index = " + startindex + " Length of word = " + s1.length());
             startindex=endindex+1;
             endindex=endindex+1;
             s1="";
            }
        
        }
    }
    
    private void findButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findButtonActionPerformed
       
        try{
        PrintWriter f=new PrintWriter("C:\\Vinay\\Indented.txt");
                    f.print(textArea.getText());
                    f.close();
        }
        catch(Exception e){}
        String q=JOptionPane.showInputDialog("Enter the word to be replaced");
        LinkedList LL=new LinkedList();
        
        try{Scanner S=new Scanner(new File("C:/Vinay/Indented.txt"));
        
   while( S.hasNext()){
   char c;
   //System.out.println("Its here");
   st = new StringTokenizer(S.next(),"{}[]().,\";*=:/&!-'><| ",true);
   while(st.hasMoreTokens()){
        LL.add(st.nextToken());                
      }      
    }
    LL.display();
    
    if(!LL.presearch(q))return;
        String z=JOptionPane.showInputDialog("Enter the word to replace");
    LL.search(q,z);
    
    LL.display();
   // JOptionPane.showMessageDialog(null,"Replacement done");

         }
         catch(Exception e){}
        try{
                Scanner fin=new Scanner(new File("C:\\Vinay\\Indent.txt"));
                String buffer="";
                while(fin.hasNext())
                    buffer+=fin.nextLine()+"\n";
                textArea.setText(buffer);
                System.out.println(buffer);
                
                fin.close();
                indent();
                status.setText("loaded"+"C:\\Vinay\\Indented.txt");
                
                }
                catch(Exception e){}
         clearTextColors();
    }//GEN-LAST:event_findButtonActionPerformed
  public void updateTextColor(int offset, int length, Color c) {
		StyleContext sc = StyleContext.getDefaultStyleContext();
		AttributeSet aset = sc.addAttribute(SimpleAttributeSet.EMPTY,
				StyleConstants.Foreground, c);
		textEditorDoc.setCharacterAttributes(offset, length, aset, true);
	}

	public void clearTextColors() {
		updateTextColor(0, textArea.getText().length(), Color.WHITE);
	}

	public void updateTextColor(int offset, int length) {
                Random rand = new Random();
                float r = rand.nextFloat();
                float g = rand.nextFloat();
                float b = rand.nextFloat();
                Color randomColor = new Color(r, g, b);
		updateTextColor(offset, length,randomColor );
        }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TextEditorFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TextEditorFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TextEditorFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TextEditorFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TextEditorFrame().setVisible(true);
            }
        });
    }
    public void filetreedemo(){
        File root;
    //if (args.length > 0) root = new File(args[0]);
     root = new File("C:\\Vinay\\java");
    // Create a TreeModel object to represent our tree of files
    FileTreeModel model = new FileTreeModel(root);
    
    // Create a JTree and tell it to display our model
    JTree tree = new JTree();
    tree.setModel(model);
    System.out.println("reaching here");
    System.out.println(tree.getHeight());
    /*String s="";
    while(st.hasMoreTokens()){
        s="";
        System.out.println(st);
         s=st.nextToken()+".class";
        if(model.isLeaf(s)){
            System.out.println( s+"a leaf");
        }
    }*/
     JScrollPane scrollpane = new JScrollPane(tree);
    // System.out.println(scrollpane.getRootPane().getClass());
    // Display it all in a window and make the window appear
    JFrame frame = new JFrame();
    frame.getContentPane().add(scrollpane, "Center");
    System.out.println(frame.getContentPane().getSize());
    frame.setSize(400,600);
    frame.setVisible(true);
    }
    
    String nameSave="";
    StringTokenizer st;
    String s;
    BST bstIO,bstLang,bstMath,bstUtil;
    int indentNumber;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton complieButton;
    private javax.swing.JButton exitButton;
    private javax.swing.JButton findButton;
    private javax.swing.JButton highButton;
    private javax.swing.JButton indentButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea lines;
    private javax.swing.JButton newButton;
    private javax.swing.JButton openButton;
    private javax.swing.JButton runButton;
    private javax.swing.JButton saveButton;
    private javax.swing.JTextField status;
    private javax.swing.JTextPane textArea;
    // End of variables declaration//GEN-END:variables
}
